<title>A Bio-Inspired, Self-Healing, Resilient Architecture for Digital Instrumentation and Control Systems and Embedded Devices</title>
<author>Shawkat S. Khairullah & Carl R. Elks</author>
<year>2018</year>
<Jounral>Nuclear Technology</Journal>
<Affiliation>Virginia Commonwealth University, Department of Electrical and Computer Engineering, 601 West Main Street, Richmond, Virginia 23284-3072</Affiliation>
<Publishing_house>ANS</Publishing_house>
<Text_Collector>田苗，BFSU</Text_Collector>
<DOI>10.1080/00295450.2018.1450014</DOI>
<URL>https://doi.org/10.1080/00295450.2018.1450014</URL>
Abstract — One of the essential concepts being postulated for next generation nuclear power plants (NPPs) that could include Gen IV reactors—small modular reactors—is the notion of resilient and survivable instrumentation and control (I&C) systems. Resilience at the system and plant level will rely on highly robust and fault-tolerant digital embedded devices as a foundation. This paper presents a new self-healing programmable digital I&C architecture, BioSymPLe, inspired from the way nature responds, defends, and heals: the stem cells in the immune system of living organisms and the pathway from DNA to protein. The BioSymPLe is organized in a four-layered approach: (1) cellular layer that includes four sublayers, with each sublayer allocating two functional B cells which represent the building block that executes the local functionality of NPP critical application based on the expression for DNA genetic codes stored inside each cell; (2) tissue layer that embeds eight redundant Tcells and eight routing units to facilitate coordination and organized behavior among a network of four cellular sublayers; (3) internal healing layer that monitors the correct execution of functions at the cellular level and activates healing mechanism at the tissue level; and (4) external healing layer using a concept of embryonic stem cells by differentiating this type of cell to repair the faulty T cells. Finally, the BioSymPLe is capable of tolerating a significant number of faults (transient, permanent, or hardware common cause failures) that can stem from environmental disturbances, and we believe it can positively impact the operation of next generation digital I&C systems in NPPs.
Keywords — Instrumentation and control, resilience, self-healing, living organisms, nuclear power plant.
Note — Some figures may be in color only in the electronic version.
I.INTRODUCTION
Modernization of instrumentation and control (I&C) in operating nuclear power plants (NPPs) with digital technology is expected to provide new capabilities for improving plant safety and productivity (e.g., increasing output capacity, reliability) while reducing maintenance costs previously associated with analog technology. As such, U.S. NPPs have been incrementally evolving toward a cyber-assisted infrastructure for some  time, with an expected transition to all digital I&C NPPs with the next generation of plants [e.g., multiunit plants based on small modular reactors (SMRs)].
NPP I&C systems are a critical facet to the safety and resilience of NPP operations, like the central nervous system of the plant continuously accepting plant information and monitoring and adjusting the complex processes to maintain safe and reliable energy generation on a timely basis. A typical I&C system is shown in Fig. 1. Sensing devices measure a wide variety of plant parameters such as pressure, steam, and water temperature levels and an embedded digital controller executes algorithms to provide operational control and safety based on the measured data from the plant’s sensors. In addition, timely reporting of situational data for operator actions and response is a key part of the I&C system as well.1–3 Altogether, this ensemble of input/output (I/O) devices, controllers, algorithms, relays, and actuation devices is responsible for providing both automated and human-assisted safe control of the plant.
Fig. 1. The I&C system in NPPs.
Today’s I&C systems are largely reactive to  one another, meaning they respond or react to unanticipated events/transients with limited capacity to adapt  to failures or to know how other plant systems are behaving or func- tioning in response to the event. The use of well-designed hardware redundancy in the digital embedded devices of an I&C system can help mitigate some of the spurious trips, however, the real opportunities for improved reliability and performance are found in integrating control, detection, and recovery together to provide overall system resilience. This requires rethinking how we view I&C functions in the plant-wide context, not as separate collections of control, with resilience being defined as “the ability of a system or domain to withstand damage or failures, and in such events, to reestablish itself quickly.” Therefore, the ultimate goal of  a resilient system is to maximize the survivability of the critical infrastructures and systems when they are subject to faults and adverse operating conditions. One of the concepts being postulated for next generation reactors (Gen V reactors, multiunit SMRs) is the notion of resilient and survivable (I&C) systems built from inherent self-healing properties. The idea being that resilience “baked in”  at  lower levels of functionality (devices and controllers) can  be more effectively used in overall plant resilience  and safety strategies at the higher levels (plant-wide systems). This paper describes a biologically inspired I&C architec- ture design and implementation called BioSymPLe that supports self-healing concepts for overall plant resilience.
In recent years, self-healing concepts based on biological
physiology have received attention for the possibility of building digital embedded devices that are much more resilient than systems built from traditional fault tolerance methods.4–7 Self-healing models based on immune systems, embryonics, and dendritic cells have been reported in the literature with varying degrees of success and adoption. However, many of these models are  not  fully  developed for safety-related applications; that is, they lack provenance and verifiability of integrity attributes like real-time behavior,
determinism, fault tolerance, and testability. The main pur- pose of this research project is to look at different biologically inspired paradigms for organizing system functions so that they become inherently resilient due to device organization and behaviors. In addition, we are rethinking how embedded devices in I&C systems can be made extremely resilient from an architectural perspective by understanding biological models of resilience for developing new embedded devices for next generation I&C systems.
II.SELF-HEALING PRINCIPLES IN MOLECULAR AND CELLULAR BIOLOGY
In this section, to provide context for the reader, a brief discussion on the main biological concepts that are used as reference models for our research is presented. The two models we found to be promising in terms of complementary resilience are (1) the stem cells in the immune system and (2) the pathway from DNA to protein. Within each of these techniques, there are diverse self-healing mechanisms used by the organism to provide overall resilience.8
The mammalian immune system includes two types of cells: adult stem cells and embryonic stem cells as is shown in Fig. 2a. The first type is ready either to be divided to produce more stem cells or to be differentiated into any terminally differentiated cell that has a specific function. However, the second type is continuously divided and differentiated (self-renewal) into any type of cell. These  cells become any type of specific functional cell based on  the gene expression that determines which gene is active or not on the DNA molecule.8
These two types of cells are typically used by the immune system to protect it against different types of pathogens. These cells can detect the infection using special
Fig. 2. (a) When a stem cell divides, each daughter can either remain a stem cell or go on to become terminally differentiated; (b) the pathway from DNA to protein.
types of cells called B cells and can fix it or kill it using another type called T cell.9 The second mechanism called the pathway from DNA to protein, shown in Fig. 2b, is where the genetic strands located on the DNA molecule are expressed through two biological processes—transcription and translation—to generate a collection of amino acids (proteins) that specify the function of  the  divided  cell  based on their shape and their position in the living organ- ism. All of these genetic codes are stored inside the genome that contains that entire organism’s DNA. However, not all these genes are activated inside the cell at one time to determine the behavior of the organism. Some of these  genes are on and some of them are off and that is based on the location of the biological cell in the organism.8
III.RELATED WORK
Different self-healing digital systems have been designed in the literature to mask, detect, and recover from the effects of faults. However, these techniques have led to inefficient designs and a low level of fault coverage due to the hardware redundancy for the entire system and the limited number of fault-tolerant techniques.10,11 In Ref. 12,a basic cell architec- ture for a self-repairing field-programmable gate array (FPGA) has been proposed by Mange. The design of  the cell was based on the concept of time redundancy technique as a fault-tolerant mechanism to detect the fault occurrence inside the cell within the array at a decentralized level. The internal architecture of that cell includes two types of multiplexers and two flip-flops whose outputs are compared to detect the fault occurrence. Ortega and Tyrrell in Refs. 4 and 13 proposed a different approach in embryonics by building a two-level hierarchical architecture consisting of a cellular level and organism level. Two modes of operation have been proposed to control the operation of the organism in a fault-tolerant manner. The first mode is called operation mode in which the cells of the array are working together to perform the designed function of the application. The second mode is called reconfiguration mode in which, once a fault is detected in any cell of the array, the cells on the right side of this cell recalculate their own addresses and download their new configuration genetic codes to heal the array against the failure. The embryonic cell architecture that has been proposed at the University of York was developed by Zhang et al. at the university in the west of England in Ref. 5. They have increased the level of fault coverage by adding more levels of fault tolerance to detect the transient faults in the configuration memory besides the detection of permanent faults in the function unit. Their embryonic architecture also works at two levels: cellular and organism. The internal
architecture of each cell includes eight functional units: function unit, I/O router, DNA segment memory, DNA repair unit, diagnostic logic, coordinate generator, reconfiguration unit, and a core register. In Ref. 6, Lala and Kumar have designed a self-healing architecture inspired by the biological process of the human immune system. Their design approach uses several distributed spare cells embedded among the functional cells in the array to heal the system at a decentra- lized level against the faults. Three types of cells are included in the design: functional cells, spare cells, and router cells. In Ref. 14, Zang et al. have designed a different approach to realize the embryonic cell. Their design is based on using the look-up table (LUT) as a building block for the functional unit and column elimination is used as a self-healing mechanism by making all the cells within the same column  of  the  faulty cell as transparent cells that perform none function. Ultimately, a novel self-repairing hardware architecture inspired by paralogous gene regulatory circuits was designed as a fault-tolerant feature in biological living organisms to achieve fast fault recovery with an efficient use of hardware resources.15
IV.BioSymPLe ARCHITECTURE OVERVIEW
BioSymPLe is inspired from two biological con-  cept models: the mammalian immune system and the pathway from DNA to protein discussed in Sec. II.  Based on these two models, the architecture space for BioSymPLe is guided to achieve a resilience-aware deterministic architecture and to prevent the architec-  ture from becoming complex and feature  rich.  The  basic architecture shown  in  Fig.  3a  is  based  in  part  on the way biological organisms achieve resiliency and our design principles.
BioSymPLe is basically comprised of four principal partitions as shown in Fig. 3a: the external  healing  layer, the tissue layer, the cellular layer, and the internal healing layer. The cellular layer is inspired by B-cell functionality in the immune system and its purpose is to host/execute the critical functions for I&C application. However, the objec- tive of internal healing layer is to continuously monitor the correct operation of these functions being executed in the cellular layer and trigger reconfiguration elimination strate- gies when faults and failures are detected.
In addition, the tissue layer exploits the concept of T cells in the immune system and is used to repair any permanent failure occurred inside the cellular layer. The external healing layer is built based on a concept of embryonic stem cells that can be differentiated to repair a group of faulty functional T cells located in the tissue layer.
Fig. 3.  (a) BioSymPLe abstraction layers and (b) BioSymPLe architecture concept. MUX = Multiplexer.
IV.A.Operational Detail
The internal structure  of  the  proposed  architecture (see Fig. 3b), is detailed as follows. The cellular layer is further decomposed into four sublayers of functional B cells that can be connected together sequentially or in parallel to execute the critical functions of I&C application. Each cellu- lar sublayer embeds two functional B cells in such a way that sublayers from the top, sublayer 0 embedding two functional cells (B0, B1), sublayer 2 embedding two functional cells (B4, B5), and sublayers from the bottom, sublayer 1 contains two cells (B2, B3), sublayer 3 contains two cells (B6, B7).
Furthermore, the external healing layer is partitioned into two sublayers: top external healing layer and bottom external healing layer. The top external healing layer is responsible for monitoring the correct behavior of all the functions being executed inside the functional T  cells (T0, T1, T4, T5), and triggering the required repair mechan- isms to heal the tissue layer against any permanent fault occurrence inside these cells.
However, the bottom external healing layer monitors the behavior of the functions being executed inside the functional T cells neighboring to the two cellular sublayers—sublayer 1 and sublayer 3, and triggering the healing mechanisms.
These four sublayers contain eight functional cells: Each cellular sublayer has two active  B cells (designated B in Fig. 3b) used to execute the application-based func- tions. The correct execution of each B cell is monitored continuously by its neighboring internal healing layer that is decomposed into two layers: left internal healing layer and right internal healing layer, and once a fault is detected inside the functional cell and determined to be transient, it will be masked/tolerated using a pair and spare redundancy (PSR) technique embedded inside the same cell. The PSR unit represents a first line of defense against the discovered transient faults. Since transient faults are the most preva- lent fault type, detecting/correcting them at the cell level is most effective. However, once a permanent fault is detected in any one of the eight functional B cells, its neighboring internal layer is notified immediately and generates a health syndrome. This health syndrome does three things: (1) deactivates the output of the faulty B cell (cell death), (2) reroutes input data from the faulty B cell and makes the data available at the input of the healthy T cell (reorganization) located in the tissue layer, and (3) activates the genetic code in the T cell that was stored in the faulty B cell (restoration). The internal healing layer represents a second line of defense against the permanent
faults that are causing defects in one or all of the eight functional B cells. In the tissue layer, eight passive preg- enerated redundant T cells (designated T in Fig. 3b) are used as a healing mechanism for the faulty B cells located in the cellular layer.
Additionally, as a third line of defense against the occurrence of additional permanent faults, the external healing layer is responsible for fault management for the entire tissue layer, and this layer is comprised of two sublayers: top external healing layer and bottom external healing layer. Each one of these two sublayers consists of four components: (1) an embryonic stem cell on the left side that can be differentiated to repair any one of the four T cells (designated T0, T1, T2, and T3 in Fig. 3b) in the left side of the tissue layer; (2) an embryonic stem cell on the right side that can be differentiated to repair any one of the four T cells (designated T4, T5, T6, and T7 in Fig. 3b) in the right side of the tissue layer; (3) a health fault reading unit, which continuously reads the error signals from the tissue layer; and (4) a healing action unit that selects which one of the four syndromes will be activated and used to differentiate the embryonic stem cell. The external layer fault management process is aimed at managing the processing capacity of the tissue and cellular layers. If too many faults occur, then we have too little resources to maintain operations. As such, the external layer monitors all of the cells concurrently based on the fault status and repair history of the tissue layer. The external healing layer can employ embryonic stem cells to replace faulty/offline B cells and T cells. The stem cell is only used when most of the self-healing resources (T cells) of the tissue layer have been used up due to the occurrence of maximum number of faulty cell repairs. As an example, a stem cell SC0 can be activated either in case of the failure of the left internal healing layer to repair the faulty B0 cell with its neighboring T0 cell or in case of the occurrence of two sequential permanent faults in both B0 cell and T0 cell.
Each  fault  reading  unit  embedded  inside  the external
healing layer (top or bottom) can produce 12 control signals for the recovery of one to four faulty T cells located in the tissue layer, and the healing action circuit selects which two of these four syndromes generating three signals will be used to configure the two embryonic stem cells located either in the top external healing layer or in the bottom external heal- ing layer. This configuration process is based on the location of fault occurrence in the BioSymPLe architecture. BioSymPLe is an architectural concept that leverages exist- ing programmable and configurable hardware technologies such as FPGA technology and application-specific integrated circuits. Many studies (and marketplace products) have con- firmed that FPGA technology is a viable and competitive option  for various  application  domains  (aerospace, nuclear
industry) and industrial control systems due to their charac- teristics with regard to reprogrammability, high performance, concurrency, and low-cost development.16–18 As a conse- quence, hardware implementation of this proposed architec- ture is realized on FPGAs.
IV.B.The Biologically Inspired Cell
In BioSymPLe  each one of the three cells—B cell,   T cell, and stem cell—has a similar internal structure, which is shown in Fig. 4. However, their functionalities are different and are based on the genetic codes stored in the configuration memory. The basic structure of the cell is comprised of two partitions: data flow and control flow. Data flow includes the data path for the adaptive functional block (AFB) unit, I/O routing direct unit, and I/O routing diagonal unit to make each cell capable of being connected to its neighboring cells from north, south, east, and west. The control flow embeds an address generation unit to store the address of the cell, a configuration memory that stores the next address of each cell and the genetic codes that configure both the execution unit and the two routing units, and a fault confinement unit to disconnect the faulty cell from its neighboring cells in case a permanent fault occurs inside the 1131 data path or the LUT data path.
Since the global function of the critical application
requires different types of functions, the configuration genetic code is stored inside the configuration memory of each cell in the system, but which logical operation can be executed by the cell is based on the expression for the genome memory. Furthermore, the four input registers located inside the functional execution unit are being enabled to read the input digital data through one of the two I/O routing units, executing the functionality [1131 functional block (FB) or 4-bit LUT FB] of the task, writing the resulting data into the output register and sending a “done” signal to a control unit as is shown in Fig. 4. The elapsed time from a change in an input I/O routing unit to the resulting change in the output I/O routing unit is dictated by B cell scan time.
IV.C.IEC 1131–Based AFB Operational Semantics
International Electrotechnical Commission  (IEC) 1131 is a widely used de facto standard for programmable logic controllers (PLCs) and I&C systems. The purpose of IEC 1131 is to support a standard programing model for PLCs. Among the programming models endorsed by IEC 1131 is the Function Block Diagram language; these standards define the operational semantics for each FB in the program.19,20 In BioSymPLe, we decided early on to adopt the concept of the function block programming model to facilitate portability to
Fig. 4.  Internal structure of the biologically inspired cell.
the PLC and digital automation community. While our function blocks are not semantically equivalent  to  IEC 1131, our AFB model is closely related to the semantics of IEC 1131 and IEC 61499 (e.g., distributed function block programming standard). The proposed AFB shown in Fig. 5 is built based on our previous work21,22 on the concept of PLCs, and it is divided into three divisions: control flow, 1131-based data flow, and LUT-based data flow.
According to the standards, the AFB can only be acti- vated with the occurrence of a “trigger” input event signal. After that, the control flow activates either the 1131-based data flow or the LUT-based data flow based on the value of the received control signals, and the output data are selected through a two-to-one multiplexer. The 1131-based data flow is comprised of four input registers, the 1131-based functional unit, and one output register. The LUT-based
Fig. 5. The AFB.
data flow consists of four input registers, the four-input LUT, and one output register. This AFB takes three clock cycles as an execution time to produce the output value and make it available at the “Data_out” output port after the trigger signal is activated. The functional unit is capable of implementing a function of four variables at one instant of time. These functions are logical and bitwise AND, OR, NAND, NOR, XOR, XNOR, and NOT operators. The unit also includes selection operations MAX and MIN; the rela- tional operators LT, LE, GT, GE, and EQ; and product functionality. Each local function implemented in each cell is assumed to be a part of a larger function (digital I&C system).
IV.D.Fault-Tolerance Techniques for 1131-Based AFB
Fault tolerance techniques based on redundancy are typically used to detect the fault occurrence in digital systems. The redundancy can either be in time, which is called active redundancy and used to detect the transient faults that may occur in sequential logic circuits, or in hardware, which is called passive redundancy and is used to identify the permanent faults occurring in combina- tional logic circuits.23 Fault tolerance involves the design of a system or subsystem in such a way that, even if certain types of faults occur, a fault will not propagate through the system and induce a failure in the system.11
IV.E.Fault-Aware Functional Block
The fault-aware functional block (FAFB) combines the two fault tolerance techniques—active and passive redun- dancy—to address transient and permanent faults.23 In our proposed architecture, two fault tolerance mechanisms are
embedded in the design of the B cell and T cell to enhance the reliability. First, we employ duplication with a compar- ison (DWC) unit shown in Fig. 6, which imitates the operation of B cells in the immune system that attack the antigens in their local locations. This unit is comprised of two duplicated 1131 FBs, a fault injector, a comparator, and a register.
Second, as it can be seen in Fig. 7, a pair and spare technique–based model is designed as an active redundancy technique to tolerate the effects of transient faults that may defect the four input registers for the AFB unit. This model is comprised of five basic units: three module-based register units (module based register_0, module based register_1, and module based register_2), a finite state machine (FSM), and a comparator. Each module-based register unit consists of four hardware components: two registers, a fault injector, and an XOR logical gate. The fault injector is used for verification purposes during testing. The DWC PLC-based AFB and the pair and spare unit are embedded as hardware components inside the AFB to build a new FAFB in the BioSymPLe architecture.
The FSM machine continuously reads the status of the error signals produced by three triplicated DWC register-based models. The concept of PSR is based on the operation of active redundancy in which a hot spare unit is taking over the functionality of the defective unit.
V.CASE STUDIES AND APPLICATIONS APPLIED TO BioSymPLe
BioSymPLe is an evolving research project where refinements and new ideas are driven by mapping BioSymPLe into different problem domains. To date, we have successfully mapped two application problems into the BioSymPLe architecture: emergency diesel generator (EDG)
Fig. 6. DWC PLC-based AFB.
Fig. 7. PSR technique.
startup for nuclear power back energy and proportional integral control. These example applications are modest steps toward a planned at-scale application related to complex nuclear industry and distributed industrial control. In addi- tion, two case studies are presented in this section to verify and demonstrate the resilience properties of BioSymPLe and how the correct operation of the self-healing mechanisms occur at different layers of the proposed system.
Quartus Prime 15.1 Lite Edition software from Altera was used as a design tool that supports several FPGA device families and the system was embedded in a digital platform, the Altera Cyclone V (5CGXFC7C7F23C8) FPGA.
V.A.First Case Study
The first case study presents the hardware implementa- tion for the high-level perspective of BioSymPLe architec- ture. A block diagram for the three main components—tissue layer, top external healing layer, and bottom external healing layer—is presented in Fig. 8a. The tissue layer includes eight pairs of functional B cells and spare T cells and each external healing layer contains four basic units: fault reading unit, healing action unit, and two spare stem cells. These 16 hard- ware components are connected and interfaced with each other to realize the BioSymPLe architecture.
V.B.Second Case Study
The second case study presents the hardware implemen- tation for the internal architecture of one B cell/T cell pair. Figure 8b shows a block diagram for the basic four hardware components required to realize each B cell/T cell pair of the BioSymPLe architecture: one bio-operational B cell (B0), one pregenerated T cell (T0), an internal healing layer including three monitoring and control units and a routing unit.
Fig. 8. (a) Block diagram of BioSymPLe architecture and (b) block diagram of one B cell, one T cell, and an internal healing layer.
V.C.Fault Injection Simulation Tests
To validate that BioSymPLe is resilient against the fault occurrence, two types of faults: transient and permanent have been injected into the internal hardware components of the bio-inspired cells. In addition, a simple state diagram shown in Fig. 9, has been created to describe the behavior of BioSymPLe with these two different scenarios. This diagram contains five states: start,  operational  B cell, pregenerated  T cell, stem cell, and dead/unsafe state. The transition between these five states is based on activating the trigger signals and detecting the permanent faults inside the 1131-based functional execution units. However, the transi- tion between the four states—start, read, execute, and write— is based on the rising edge of the clock cycle.
Once the trigger signal (T1) connected to the AFB unit of B cell (see Fig. 9) is activated, the B cell goes into a start state which takes one clock cycle to complete the initialization process of the FAFB. After that, one clock
cycle is taken to activate the four parallel input registers (read state), and then the execute state takes one  cycle  for executing the functionality by the AFB. In  write  state, the output is produced at the output register. That means four clock cycles are required at least for produ- cing the output and raising the done signal after the trigger is activated.
As is shown in Fig. 9, when three transient sequential faults were simultaneously injected into four input registers of the four PSR hardware units embedded inside the FAFB while the B cell is at the read state, these faults can be tolerated quickly using a FSM unit, which enables BioSymPLe to remain within the same state. On the other hand, injecting one permanent fault into the 1131-based functional unit while the B cell is at execute state leads to activating the three healing mechanisms and differentiating the T cells and the embryonic stem cells. The current version of BioSymPLe is not able to heal against the third sequential permanent fault, which may take the system into a dead/unsafe state.
Fig. 9. State diagram of three functional cells in BioSymPLe: B cell 0, T cell 0, and stem cell.
V.D.Emergency Diesel Generator
The functional logic for the EDG application, published in the Electric Power Research Institute technical report,24 is shown in Fig. 10a. The EDG receives a total of 14 digital input signals and produces two output signals. The output signals are calculated from the input signals using basic combinational logic AND, OR, and NOT operations. The EDG digital control system within a NPP is a safety critical system required for reactor cooling and other safety func- tionalities. While the functionality of the EDG is rather simplistic, it is a highly critical system that must be fault tolerant. To demonstrate the resilience properties of the BioSymPLe architecture, the EDG critical application has been implemented on the proposed self-healing architecture. This implementation required 16 functional cells to be connected together (see Fig. 10b) in such a way that eight cellular sublayers (two tissue layers) are interconnected with each other. Each one of the two functional cells (B cells) embedded inside the cellular sublayer has to (1) activate a different genetic code (DNA expression) based on the current address of the functional cell and (2) receive different digital input data through the I/O routing units connected to the input and output ports of the EDG application.
The experimental results show that the EDG application
in a fault-free state requires at least 245 ns execution time to generate the values of the two output ports: “Engine_Start” and “OpenAirStart_Fuel_Valves”. The reason is that the EDG functionality basically was divided into six levels of
sequential execution and at each level a limited number of functional cells are activated which requires 35 ns execution time to produce its results to the next level. As an example, level 1 requires one tissue layer including four cellular sublayers and each sublayer contains up to two functional cells to execute the functionality of eight logic functions (OR, OR,..., and NOT) by eight functional cells (FC0, FC1, ..., and FC7). All the functional cells of this level are activated at the same instant of time T1 which is “Trigger_1” signal at time 10 ns. After that, the data will be available at the output ports of the eight cells at time 50 ns with the rising edge of the done signal. Furthermore, for levels 2, 3, 4, 5, and 6, another tissue layer is needed to perform the functionality of other six logic functions (NOT, NOT,..., and AND) by the functional cells (FC8, FC9, . . . , and FC15). However, each one of these five levels of execution has to be activated at different instants of time (T2, T3, . . . , and T6).
When the EDG is subjected to two sequential perma-
nent faults into the 1131 functional units of both the B0 cell in the cellular layer and the T0 cell in the tissue layer, the EDG application is healed against the first fault by time 345 ns and the second fault by time 455 ns. This self- healing mechanism is causing about an 82% increase in time delay to handle two sequential permanent faults, and this delay remains relatively constant as the number of handled faults increases. However, the time delay is increased and becomes 570 ns when three transient faults are defecting the input registers of the same B cell before the occurrence of the first sequential permanent fault. This fault tolerance technique increases the time delay by a 130% for healing against the injection of four faults: three transient and one permanent. This type of multiple-fault scenario typically occurs in I&C systems when there is a cascading disturbance effect due to power fluctuations, EMI, and latch-up.
VI.FORMAL MODEL OF BioSymPLe
Although commercial-grade dedication (CGD) activities are well beyond the scope of this paper and project, we have given some serious consideration as how to support CGD with such a novel architecture. Recall that CGD is a process by which a device is designated for use as a basic component and given reasonable assurance that it will perform its intended safety function, and in this respect, is deemed equivalent to an item designed and manufactured under  a 10 CFR Part 50, Appendix B, quality assurance program.
In our experience, the key enablers for supporting CGD activities are traceability of evidence from require- ments to implementation. Accordingly, we have adopted
Fig. 10. (a) Logic diagram for starting the EDG application and (b) a simplified block diagram for EDG implemented on BioSymPLe.
an evidence-based and formal model–based approach to designing BioSymPLe. Specifically, we have focused on the use of rigorous design and testing methods to prove the properties of BioSymPLe.
The discipline of formal methods and verification and validation (V&V) provides a framework within which people can specify, develop, and verify systems in a systematic manner. A method is formal if it has a sound mathematical basis, typically given by a formal (logic) specification language. This basis provides the means of precisely defining notions like consistency, completeness, and correctness. It provides the means of proving that a specification is realizable, proving that a system has been implemented
correctly, and proving properties of a system without necessarily running exhaustive tests to determine its complete behavior.
VI.A. Example
The MathWorks Simulink Toolchain has been chosen for the BioSymPLe project as a design and verification tool. The primary reason for this selection was that the Simulink Toolchain offers an end-to-end solution in a single suite for design, simulation, implementation, and verification. The Simulink Design Verifier (DV) toolbox was used as a critical tool in our verification scheme to check a number of
functional and safety properties for BioSymPLe and its applications. The DV is a formal verification tool combining both model checking and automatic theorem proving. The Simulink DV is a plug-in to PROVER (Ref. 25), which is a formal verification tool that performs reachability analysis using a combination of bounded model checking26 and theo- rem induction based on the K-Induction Rule (see Ref. 27 for more details). Due to space limitations, in this paper we show only one example, which is the safety property proving. Figure 11 shows the verification model for the safety property proof for the FAFB. Specifically, a safety specification in English for proper transient faults property of the FAFB is given as:
“No matter if three sequential transient faults are injected into three input registers of 61499-based FAFB at different times while state machine-based control flow is triggered, the Data-out-B signal will never produce erroneous value.”
This safety specification has been transformed in the DV property model as shown in Fig. 11. The formal temporal logic expression of this requirement is defined as
GðP1 ^ P2 ^ P3 ¼¼> FðQÞÞ ;
where P1, P2, P3 are three injected transient faults and G is the data output that will never produce erroneous value.
VII.CONCLUSION AND FUTURE WORK
This paper presents the ongoing work of the biologi- cally inspired, self-healing, resilient I&C architecture called
BioSymPLe, which is aimed to be used in next generation NPP digital applications. These applications typically require high levels of resilience against several kinds of failure modes. BioSymPLe is a unique application of both biologically inspired self-healing attributes and computer organization properties to achieve effective fault tolerance and resilience to multiple classes of faults. Preliminary simulation and fault injection studies indicate that the pro- posed layered approach to resilience strikes a good balance between local fault detections (internal healing layer) and global fault decisions (external healing layer) to maintain continuity of system resilience. The design of three biolo- gically inspired cells—B cell, T cell, and stem cell—was based on combining concepts from biology and PLC architecture. The biological concepts provide the architec- ture with a high resilience against different types of faults with recovery mechanisms at different layers in the system. However, the PLC architecture has led to a concept of separation between the control flow and the data flow which is not available in other self-healing systems and that will enhance the process of V&V required in critical systems.
Future work will include embedding more diverse
biological concepts and different fault tolerance techni- ques inside the cell to increase the reliability level of the whole digital I&C system. Also, a concept of V&V will be used based on formal methods to verify both the data flow and the control flow at runtime inside the AFB unit. Furthermore, different network topologies will be used   to make the functional cells work cooperatively to per- form the functionality for a complex safety critical NPP application.
Fig. 11. Safety property proving/transient faults assertion.
ORCID
Shawkat   S.   Khairullah      http://orcid.org/0000-0001- 8142-8815
